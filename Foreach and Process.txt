1.	do-theThing -value 1, 2, 3
2.	1, 2, 3 | do-theThing

In (1), the function receives a collection of three values as a parameter. In (2), the function receives a collection of one value, three times in a row.

Foreach enumerates each collection (so it runs once in example 1).

Without a PROCESS block, the foreach loop will only process the LAST object passed on the pipeline. With a PROCESS block, the process block is called for each object (a collection is an object too), passed on the pipeline. Thus, for-each, inside of PROCESS, is processed three times, in example two. 

In example 2, each foreach iterates once, but it's called 3 times. In example 1, foreach is called only once, but loops 3 times.

In all practical situations, if you accept multiple inputs, and you accept values from the pipeline (and you should!), you will have a foreach inside of a process block.
